@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div class="container">
    <textarea id="chatWindow" readonly rows="10" cols="30" style="width: 100%;"></textarea> 
    <br>
    <input type="text" id="userInput" placeholder="Enter your name"/>
    <input type="text" id="messageInput" placeholder="Enter your message"/>
    <input type="button" id="sendButton" value="Send Message"/>
</div>

<script type="text/javascript">

    function typeMessage(element, message, callback, index = 0) {
        if (index === 0) {
            element.value += "Cleora: ";
        }
        if (index < message.length) {
            element.value += message.charAt(index);
            setTimeout(() => typeMessage(element, message, callback, index + 1), 50);
        } else if (callback) {
            callback();
        }
    }

        function fetchRiddle() {
            fetch('/api/Quest/GetRiddle')
                .then(response => response.json())
                .then(riddle => {
                    const chatWindow = document.getElementById("chatWindow");
                    const riddleText = `${riddle.question}\n`;
                    typeMessage(chatWindow, riddleText);
                    currentRiddleId = riddle.id;
                });
            
    }

    document.getElementById("sendButton").addEventListener("click", function (event) {
        const user = document.getElementById("userInput").value;
        const message = document.getElementById("messageInput").value;
        const chatWindow = document.getElementById("chatWindow");

        const encodedMsg = user + ": " + message + "\n";
        chatWindow.value += encodedMsg;


        if (message.trim().toLowerCase() === "hello") {
            const cleoraReply = "Hello, " + user + "!\n";
            typeMessage(chatWindow, cleoraReply, fetchRiddle);
        } else {
            fetch('/api/Quest/EvaluateAnswer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    riddleId: currentRiddleId,
                    answer: message
                })
            })
                .then(response => response.json())
                .then(isCorrect => {
                    chatWindow.scrollTop = chatWindow.scrollHeight; 

                    if (isCorrect) {
                        typeMessage(chatWindow, "Good job, that's correct.\n", fetchRiddle);
                    } else {
                        chatWindow.value += "That is incorrect. Try again.\n";
                        chatWindow.scrollTop = chatWindow.scrollHeight; 
                    }
                });
        }

        chatWindow.scrollTop = chatWindow.scrollHeight;
        document.getElementById("messageInput").value = "";
        event.preventDefault();
    });

    document.getElementById("messageInput").addEventListener("keydown", function (event) {
        if (event.key === "Enter") {
            event.preventDefault();
            document.getElementById("sendButton").click();
        }
    });

    // let currentRiddleId;
    // fetchRiddle();

</script>